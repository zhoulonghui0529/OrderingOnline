#控制台打印数据库操作日志文件
# Global logging configuration



#每个Logger都被了一个日志级别（log level），用来控制日志信息的输出。日志级别从高到低分为：
#A：off         最高等级，用于关闭所有日志记录。
#B：fatal       指出每个严重的错误事件将会导致应用程序的退出。
#C：error      指出虽然发生错误事件，但仍然不影响系统的继续运行。
#D：warm     表明会出现潜在的错误情形。
#E：info         一般和在粗粒度级别上，强调应用程序的运行全程。
#F：debug     一般用于细粒度级别上，对调试应用程序非常有帮助。
#G：all           最低等级，用于打开所有日志记录。


#debug设置为模式 在控制台打印日志信息
#log4j.rootLogger=DEBUG, stdout
## MyBatis logging configuration...
#log4j.logger.org.mybatis.example.BlogMapper=TRACE
## Console output...
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n

log4j.rootLogger=debug, C,stdout

# MyBatis logging configuration...
log4j.logger.org.mybatis.example.BlogMapper=TRACE
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n

log4j.appender.A=org.apache.log4j.ConsoleAppender
log4j.appender.A.layout=org.apache.log4j.PatternLayout
log4j.appender.A.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

log4j.appender.B=org.apache.log4j.FileAppender
log4j.appender.B.File=F:\\log.log
log4j.appender.B.layout=org.apache.log4j.SimpleLayout

log4j.appender.C=org.apache.log4j.RollingFileAppender
log4j.appender.C.File=F:\\log.html
log4j.appender.C.MaxFileSize=1000KB
log4j.appender.C.MaxBackupIndex=10
log4j.appender.C.layout=org.apache.log4j.HTMLLayout
log4j.appender.C.encoding=gbk

log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File=F:\\log.log
log4j.appender.D.layout=org.apache.log4j.TTCCLayout
